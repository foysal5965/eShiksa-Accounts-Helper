// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  password           String
  role               UserRole
  needPasswordChange Boolean    @default(true)
  status             UserStatus @default(ACTIVE)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  admin              Admin?

  @@map("users")
}

model Admin {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  profilePhoto String?
  contactNo    String
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [email], references: [email])

  @@map("admins")
}

model College {
  id                     String   @id @default(uuid())
  collegeName            String
  collegeAddress         String
  cloudSpacePricePerUnit Int
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  Bill                   Bill[]
}

model Bill {
  id                 String  @id @default(uuid())
  cloudSpaceUnit Int
  billingTime        String
  admissionMsg       Int
  groupMsg           Int
  proReMigraMsg      Int
  professionalAddMsg Int
  stdNtsMsg          Int
  TutionFeeMsg       Int
  absentMsg          Int
  collegeId String
  college College @relation(fields: [collegeId], references: [id])
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum Gender {
  MALE
  FEMALE
}
